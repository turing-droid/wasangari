# Generated by Django 5.1.6 on 2025-02-06 11:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ethnies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name="Nom de l'ethnie")),
                ('description', models.TextField(verbose_name='Description')),
                ('histoire', models.TextField(verbose_name="Histoire de l'ethnie")),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('lieu', models.CharField(max_length=255)),
                ('statut', models.CharField(max_length=55)),
                ('prix_entree', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nbr_places_dispo', models.IntegerField()),
                ('media_profil_url', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='photo_evenement/')),
            ],
        ),
        migrations.CreateModel(
            name='ObjetVente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=64)),
                ('auteur', models.CharField(max_length=64)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(max_length=255)),
                ('media_url', models.ImageField(blank=True, default='photo_objetVente/default.jpg', null=True, upload_to='photo_objetVente/')),
            ],
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255, verbose_name="Titre de l'article")),
                ('description', models.TextField(verbose_name='Une petite description de votre podcast')),
                ('date_et_heure', models.DateTimeField(auto_now=True)),
                ('podcast_profil', models.ImageField(blank=True, null=True, upload_to='podcast_pictures/', verbose_name='Ajouter une photo')),
                ('appartenance', models.CharField(choices=[('apprendre', 'apprendre'), ('decouvrir', 'decouvrir')], max_length=12, verbose_name="sexion d'appartenance du podcast")),
            ],
        ),
        migrations.CreateModel(
            name='Thematique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse E-mail')),
                ('sexe', models.CharField(choices=[('Homme', 'Masculin'), ('Femme', 'Feminin')], max_length=10, verbose_name='SEXE')),
                ('photo_de_profil', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Votre photo de profil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('ethnie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='frontend.ethnies')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Langues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom de la langue')),
                ('ethnie', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='langues', to='frontend.ethnies')),
            ],
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_et_heure', models.DateTimeField(auto_now=True)),
                ('rythme', models.IntegerField(blank=True, null=True, verbose_name="Rythme d'apprentissage du cours (en nombre d'heure) par semaine")),
                ('certifiante', models.BooleanField(default=False)),
                ('photo_de_profil', models.ImageField(blank=True, null=True, upload_to='courses_pictures/', verbose_name='Une image de description pour le cours')),
                ('videos', models.FileField(blank=True, null=True, upload_to='', verbose_name="Une vidéo eplicatif du cours, pour donner un avant goût à l'apprenant")),
                ('a_apprendre', models.TextField()),
                ('glossaire', models.TextField()),
                ('nombre_semaine', models.IntegerField(default=1, verbose_name="Durée de l'apprentissage en nombre de semaine")),
                ('disponibilite', models.CharField(choices=[('ouvert', 'Ouvert pour inscription'), ('bientot', 'Bientôt'), ('en_cours', 'En cours'), ('archive', 'Archivé')], max_length=24, verbose_name='Disponibilité du cours')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='frontend.langues')),
                ('thematiques', models.ManyToManyField(blank=True, related_name='cours', to='frontend.thematique')),
            ],
        ),
        migrations.CreateModel(
            name='Semaine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255, verbose_name="Donner un titre pour l'ensemble des notions à apprendre durant cette semaine")),
                ('nombre_lecon', models.IntegerField(verbose_name='Nombre de leçon pour la semaine')),
                ('cours', models.ForeignKey(default='X', on_delete=django.db.models.deletion.DO_NOTHING, related_name='cours', to='frontend.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Lecon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_et_heure', models.DateTimeField(auto_now=True)),
                ('titre', models.CharField(max_length=255, verbose_name='Donner un titre pour cette leçon que vous souhaitez ajouter')),
                ('video', models.FileField(default='X', upload_to='', verbose_name='Ajouter la version vidéo de la leçon')),
                ('pdf', models.FileField(upload_to='', verbose_name='Ajouter la/les fichiers de documentation qui accompagne la vidéo')),
                ('semaine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.semaine')),
            ],
        ),
    ]
